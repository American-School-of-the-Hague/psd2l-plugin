<queries>
	<!--set name here (also applies to permissions_root-->
    <query name="com.txoof.brightspace.users.07s_active_w_auditor" coreTable="students" flattened="false">
		<!--add description here-->
        <description>export all active students grades 5-13 for use with a BrightSpace 7-User import</description>
		<!--number of columns here must match number sql returns-->
        <columns>
			<column column="STUDENTS.ID">type</column> <!-- for columns not in database use a core filed-->
			<column column="STUDENTS.ID">action</column> <!-- for columns not in database use a core filed-->
			<column column="U_STUDENTSUSERFIELDS.EMAILSTUDENT">username</column> 
			<column column="STUDENTS.ID">org_defined_id</column>
			<column column="STUDENTS.FIRST_NAME">first_name</column>
			<column column="STUDENTS.LAST_NAME">last_name</column>
			<column column="STUDENTS.ID">password</column>
			<column column="STUDENTS.ENROLL_STATUS">is_active</column>
			<column column="STUDENTS.ID">role_name</column>
			<column column="U_STUDENTSUSERFIELDS.EMAILSTUDENT">email</column>
			<column column="STUDENTS.ID">relationships</column>
			<column column="STUDENTS.ID">pref_first_name</column>
			<column column="STUDENTS.ID">pref_last_name</column>
 		</columns>
		<!--SQL query in format <![CDATA[QUERY]]>-->
        <sql>
			<![CDATA[
			select distinct
				'user' as "type",
				'UPDATE' as "action",
				u_studentsuserfields.emailstudent as "username",
				'S_'||students.student_number as "org_defined_id",
				students.first_name as "first_name",
				students.last_name as "last_name",
				'' as "password",
				1 as "is_active",
				'Learner' as "role_name",
				u_studentsuserfields.emailstudent as "email",
				/* add Auditor relation to EAL, Learning Support teachers */
				listagg('Auditor'||chr(58)||'T_'||teachers.teachernumber, chr(124) )
					within group (order by teachers.teachernumber desc) ||chr(124)||
				listagg('Parent'||chr(58)||'P_'||guardian.guardianid, chr(124)) WITHIN GROUP ( ORDER BY Guardian.LastName desc ) as "relationship",
				'' as "pref_last_name",
				'' as "pref_first_name"
			
				from 
				/* this should remove duplicates, but it does not work */
				(select distinct 
					teachernumber, id
					from teachers) teachers,
				COURSES COURSES,
				STUDENTS STUDENTS,
				CC CC,
				U_STUDENTSUSERFIELDS U_STUDENTSUSERFIELDS,
				GUARDIANSTUDENT GUARDIANSTUDENT,
				guardian guardian
			
			where CC.STUDENTID=STUDENTS.ID
				and GuardianStudent.studentsdcid = Students.dcid
				and Guardian.GuardianID = GuardianStudent.GuardianID
				and U_STUDENTSUSERFIELDS.STUDENTSDCID = students.dcid
				and cc.teacherid = teachers.id

				/* 
				if student is enroled in OLEA, MSLC or Eng Foundations,
				add their teacher as an auditor
				*/
				and (cc.course_number like 'OLEA' 
					or courses.sched_department like 'MSLSC' 
					or courses.sched_department like 'MSEAL'
					/* ms, hs special education */
					or courses.sched_department like '%SSE%'
					or courses.course_name like 'ENG English Foundations')
				and CC.COURSE_NUMBER=COURSES.COURSE_NUMBER
				and STUDENTS.ENROLL_STATUS =0
				and STUDENTS.GRADE_LEVEL >=5
				and CC.TERMID >= case 
				when (EXTRACT(month from sysdate) >= 1 and EXTRACT(month from sysdate) <= 7)
				THEN (EXTRACT(year from sysdate)-2000+9)*100
				when (EXTRACT(month from sysdate) > 7 and EXTRACT(month from sysdate) <= 12)
				THEN (EXTRACT(year from sysdate)-2000+10)*100
				end    
			
			GROUP BY students.grade_level, u_studentsuserfields.emailstudent, students.student_number,  students.first_name,  students.last_name
			
			order by STUDENTS.GRADE_LEVEL DESC
			]]>
        </sql>
    </query>

</queries>