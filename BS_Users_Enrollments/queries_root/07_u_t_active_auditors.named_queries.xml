<queries>
	<!--set name here (also applies to permissions_root-->
    <query name="com.txoof.brightspace.users.07t_active_auditors" coreTable="teachers" flattened="true">
		<!--add description here-->
        <description>export all active teachers for use with a BrightSpace 7-User import</description>
		<!--number of columns here must match number sql returns-->
        <columns>
			<column column="TEACHERS.ID">type</column> <!-- for columns not in database use a core filed-->
			<column column="TEACHERS.ID">action</column> <!-- for columns not in database use a core filed-->
			<column column="TEACHERS.EMAIL_ADDR">username</column> 
			<column column="TEACHERS.ID">org_defined_id</column>
			<column column="TEACHERS.FIRST_NAME">first_name</column>
			<column column="TEACHERS.LAST_NAME">last_name</column>
			<column column="TEACHERS.ID">password</column>
			<column column="STUDENTS.ENROLL_STATUS">is_active</column>
			<column column="TEACHERS.ID">role_name</column>
			<column column="TEACHERS.EMAIL_ADDR">email</column>
			<column column="TEACHERS.ID">relationships</column>
			<column column="TEACHERS.ID">pref_first_name</column>
			<column column="TEACHERS.ID">pref_last_name</column>
 		</columns>
		<!--SQL query in format <![CDATA[QUERY]]>-->
        <sql>
			<![CDATA[
			select distinct
				'user' as "type",
				'UPDATE' as "action",
				/* 
				use username portion of teacher/staff email addresses for D2L username.
				This is necessary because some staff use their @ash.nl email address as
				their guardian contact information. The parent accounts are created first
				resulting in a colision between the parent account username and teacher 
				account username.
				*/
				regexp_replace(TEACHERS.EMAIL_ADDR, '(@.*)', '') as "username",
				/* prepend a 'T' to make sure there are no studentid/teacherid colisions */
				'T_'||TEACHERS.TEACHERNUMBER as "org_defined_id",
				TEACHERS.FIRST_NAME as "first_name",
				TEACHERS.LAST_NAME as "last_name",
				'' as "password",
				0 as "is_active",
				'Learner Support' as "role_name",
				TEACHERS.EMAIL_ADDR as "email",
				'' as "relationships",
				'' as "pref_first_name",
				'' as "pref_last_name"
			from COURSES COURSES,
				CC CC,
				STUDENTS STUDENTS,
				TEACHERS TEACHERS 
			where CC.STUDENTID=STUDENTS.ID
				and CC.TEACHERID=TEACHERS.ID
				and COURSES.COURSE_NUMBER=CC.COURSE_NUMBER
				and TEACHERS.SCHOOLID >=2
				and CC.TERMID >=3100
				and STUDENTS.ENROLL_STATUS =0
				and TEACHERS.STATUS =1
				/*
				only include teachers of Learning Support (OLEA, MSLSC), EAL, Special Ed (SSE)
				and English Foundations 
				*/
				and (cc.course_number like 'OLEA' 
					or courses.sched_department like 'MSLSC' 
					or courses.sched_department like 'MSEAL'
					/* ms, hs special education */
					or courses.sched_department like '%SSE%'
					or courses.course_name like '%ENG English Foundations%'
					or courses.course_name like '%English as an Addl Language%')
				and CC.COURSE_NUMBER=COURSES.COURSE_NUMBER
				and STUDENTS.ENROLL_STATUS =0
				and STUDENTS.GRADE_LEVEL >=5
				and CC.TERMID >= case 
				when (EXTRACT(month from sysdate) >= 1 and EXTRACT(month from sysdate) <= 7)
				THEN (EXTRACT(year from sysdate)-2000+9)*100
				when (EXTRACT(month from sysdate) > 7 and EXTRACT(month from sysdate) <= 12)
				THEN (EXTRACT(year from sysdate)-2000+10)*100
				end
			order by "last_name" asc
			]]>
        </sql>
    </query>

</queries>