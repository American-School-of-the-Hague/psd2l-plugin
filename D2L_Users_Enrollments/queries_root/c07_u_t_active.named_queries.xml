<queries>
    <!--set name here (also applies to permissions_root-->
    <query name="com.txoof.brightspace.users.c07t_active" coreTable="teachers" flattened="true">
        <!--add description here-->
        <description>export all active teachers for use with a BrightSpace 7-User import</description>
        <!--number of columns here must match number sql returns-->
        <columns>
            <column column="TEACHERS.ID">type</column> <!-- for columns not in database use a core filed-->
            <column column="TEACHERS.ID">action</column> <!-- for columns not in database use a core filed-->
            <column column="TEACHERS.EMAIL_ADDR">username</column> 
            <column column="TEACHERS.ID">org_defined_id</column>
            <column column="TEACHERS.FIRST_NAME">first_name</column>
            <column column="TEACHERS.LAST_NAME">last_name</column>
            <column column="TEACHERS.ID">password</column>
            <column column="TEACHERS.ID">is_active</column>
            <column column="TEACHERS.ID">role_name</column>
            <column column="TEACHERS.EMAIL_ADDR">email</column>
            <column column="TEACHERS.ID">relationships</column>
            <column column="TEACHERS.ID">pref_first_name</column>
            <column column="TEACHERS.ID">pref_last_name</column>
         </columns>
        <!--SQL query in format <![CDATA[QUERY]]>-->
        <sql>
            <![CDATA[
            SELECT DISTINCT
                'user'                                          AS "type",
                'UPDATE'                                        AS "action",

                /* 
                 * Use username portion of teacher/staff email addresses for D2L username.
                 * This is necessary because some staff use their @ash.nl email address as
                 * their guardian contact information. The parent accounts are created first
                 * resulting in a collision between the parent account username and teacher 
                 * account username.
                */
                REGEXP_REPLACE(users.email_addr, '(@.*)', '')    AS "username",

                /* 
                 * Prepend a 'T' to make sure there are no studentid/teacherid colissions 
                 */
                'T_' || users.teachernumber                     AS "org_defined_id",
                users.first_name                                AS "first_name",
                users.last_name                                 AS "last_name",
                ''                                              AS "password",
                1                                               AS "is_active",

                /*
                 * Add cascading system roles -- this should only be administrators/super admins or other global roles
                 *
                 * School level roles such AS counselors will be handled at the school level in
                 * 08_e_t_school.named_queries
                 *
                 * Counselor roles will eventually be assigned through PowerSchool; this is 
                 * a native assignment to PowerSchool and is not managed through the custom
                 * Brightspace table in PowerSchool. 
                 *
                 * See Intranet > PS > FAQ: how to assign staff to counselor role
                 */
                CASE
                    WHEN LOWER(staffuser.brightspace_account_type) LIKE '%-org%'
                    THEN staffuser.brightspace_account_type
                    ELSE 'Instructor'
                END                                             AS "role_name",
                users.email_addr                                AS "email",
                ''                                              AS "relationships",
                ''                                              AS "pref_first_name",
                ''                                              AS "pref_last_name"
            FROM users
                JOIN schoolstaff staff                          ON staff.users_dcid = users.dcid
                LEFT JOIN u_schoolstaffuserfields staffuser     ON staffuser.schoolstaffdcid = staff.dcid
            WHERE
                /* 
                 * Only the homeschool information for each user; 
                 * this prevents multiple entries
                 */
                users.homeschoolid=staff.schoolid
                
                /* 
                 * Ignore all users with no email address 
                 */
                AND LENGTH(users.email_addr) > 0

                /* 
                 * Only active staff 
                 */
                AND staff.status=1
            ORDER BY users.last_name ASC

            ]]>
        </sql>
    </query>

</queries>